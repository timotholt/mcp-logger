You have a checked-in dependency at ./babylon-renderer/mcp-logger.

Goal: make the Babylon renderer send browser logs with a single call to mcpLog(), no extra setup.

Key facts from the dependency:
- packages/browser-client/src/api.js defines mcpLog().
- mcpLog() lazily initializes its fetch transport on first use (ensureTransport) and then posts logs to /push.
- The UMD build exposes window.mcpLog; ES modules can import { mcpLog } from '@mcp-logger/browser-client'.

Tasks for Windsurf:
1. Build (or reuse) the bundle in packages/browser-client/dist via `npm run build --prefix babylon-renderer/mcp-logger/packages/browser-client`.
2. When serving the renderer, include dist/index.js so window.mcpLog is available.
3. In the Babylon codebase, use window.mcpLog('message', 'sessionId', 'clientId') as the single logging surface. Let mcpLog handle initialization; no other helpers should be used.
4. Ensure the host app forwards POST /push to the logger server (runs from babylon-renderer/mcp-logger/packages/server).
5. Optional: provide a thin wrapper (if needed) that just calls window.mcpLog so future callers stay consistent.

Remember: no alternative logging functionsâ€”just mcpLog().